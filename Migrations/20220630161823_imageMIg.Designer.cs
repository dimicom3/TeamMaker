// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace teammaker.Migrations
{
    [DbContext(typeof(TeamMakerContext))]
    [Migration("20220630161823_imageMIg")]
    partial class imageMIg
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KorisnikTeam", b =>
                {
                    b.Property<int>("KorisniciID")
                        .HasColumnType("int");

                    b.Property<int>("TeamsID")
                        .HasColumnType("int");

                    b.HasKey("KorisniciID", "TeamsID");

                    b.HasIndex("TeamsID");

                    b.ToTable("KorisnikTeam");
                });

            modelBuilder.Entity("Models.Block", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("KorisnikRcvID")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikSndID")
                        .HasColumnType("int");

                    b.Property<string>("Poruka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Verzija")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikRcvID");

                    b.HasIndex("KorisnikSndID");

                    b.ToTable("Bloks");
                });

            modelBuilder.Entity("Models.Invite", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Poruka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.Property<int>("Verzija")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("TeamID");

                    b.ToTable("Invites");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fakultet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Indeks")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("Models.Objava", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Poruka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("TeamID");

                    b.ToTable("Objave");
                });

            modelBuilder.Entity("Models.Ocena", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("KorisnikRcvID")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikSndID")
                        .HasColumnType("int");

                    b.Property<int>("Vrednost")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikRcvID");

                    b.HasIndex("KorisnikSndID");

                    b.ToTable("Ocene");
                });

            modelBuilder.Entity("Models.Poruka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("KorisnikRcvID")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikSndID")
                        .HasColumnType("int");

                    b.Property<string>("Tekst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikRcvID");

                    b.HasIndex("KorisnikSndID");

                    b.ToTable("Poruke");
                });

            modelBuilder.Entity("Models.Sprint", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("EndSprint")
                        .HasColumnType("datetime2");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartSprint")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TeamID");

                    b.ToTable("Sprints");
                });

            modelBuilder.Entity("Models.Tag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TeamID");

                    b.ToTable("Tagovi");
                });

            modelBuilder.Entity("Models.Task", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Poeni")
                        .HasColumnType("int");

                    b.Property<int?>("SprintID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.Property<int>("Vreme")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("SprintID");

                    b.HasIndex("TeamID");

                    b.ToTable("Taskovi");
                });

            modelBuilder.Entity("Models.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeaderID")
                        .HasColumnType("int");

                    b.Property<bool>("NeedsMembers")
                        .HasColumnType("bit");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LeaderID");

                    b.ToTable("Timovi");
                });

            modelBuilder.Entity("KorisnikTeam", b =>
                {
                    b.HasOne("Models.Korisnik", null)
                        .WithMany()
                        .HasForeignKey("KorisniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Block", b =>
                {
                    b.HasOne("Models.Korisnik", "KorisnikRcv")
                        .WithMany("BlocksRcv")
                        .HasForeignKey("KorisnikRcvID");

                    b.HasOne("Models.Korisnik", "KorisnikSnd")
                        .WithMany("BlocksSnd")
                        .HasForeignKey("KorisnikSndID");

                    b.Navigation("KorisnikRcv");

                    b.Navigation("KorisnikSnd");
                });

            modelBuilder.Entity("Models.Invite", b =>
                {
                    b.HasOne("Models.Korisnik", "Korisnik")
                        .WithMany("InvitesRcv")
                        .HasForeignKey("KorisnikID");

                    b.HasOne("Models.Team", "Team")
                        .WithMany("Invites")
                        .HasForeignKey("TeamID");

                    b.Navigation("Korisnik");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Models.Objava", b =>
                {
                    b.HasOne("Models.Korisnik", "Korisnik")
                        .WithMany("Objave")
                        .HasForeignKey("KorisnikID");

                    b.HasOne("Models.Team", "Team")
                        .WithMany("Objave")
                        .HasForeignKey("TeamID");

                    b.Navigation("Korisnik");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Models.Ocena", b =>
                {
                    b.HasOne("Models.Korisnik", "KorisnikRcv")
                        .WithMany("OceneRcv")
                        .HasForeignKey("KorisnikRcvID");

                    b.HasOne("Models.Korisnik", "KorisnikSnd")
                        .WithMany("OceneSnd")
                        .HasForeignKey("KorisnikSndID");

                    b.Navigation("KorisnikRcv");

                    b.Navigation("KorisnikSnd");
                });

            modelBuilder.Entity("Models.Poruka", b =>
                {
                    b.HasOne("Models.Korisnik", "KorisnikRcv")
                        .WithMany("PorukeRcv")
                        .HasForeignKey("KorisnikRcvID");

                    b.HasOne("Models.Korisnik", "KorisnikSnd")
                        .WithMany("PorukeSnd")
                        .HasForeignKey("KorisnikSndID");

                    b.Navigation("KorisnikRcv");

                    b.Navigation("KorisnikSnd");
                });

            modelBuilder.Entity("Models.Sprint", b =>
                {
                    b.HasOne("Models.Team", "Team")
                        .WithMany("Sprints")
                        .HasForeignKey("TeamID");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Models.Tag", b =>
                {
                    b.HasOne("Models.Team", "Team")
                        .WithMany("Tags")
                        .HasForeignKey("TeamID");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Models.Task", b =>
                {
                    b.HasOne("Models.Korisnik", "Korisnik")
                        .WithMany("Taskovi")
                        .HasForeignKey("KorisnikID");

                    b.HasOne("Models.Sprint", "Sprint")
                        .WithMany("Taskovi")
                        .HasForeignKey("SprintID");

                    b.HasOne("Models.Team", "Team")
                        .WithMany("Tasks")
                        .HasForeignKey("TeamID");

                    b.Navigation("Korisnik");

                    b.Navigation("Sprint");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Models.Team", b =>
                {
                    b.HasOne("Models.Korisnik", "Leader")
                        .WithMany("TeamLeader")
                        .HasForeignKey("LeaderID");

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Navigation("BlocksRcv");

                    b.Navigation("BlocksSnd");

                    b.Navigation("InvitesRcv");

                    b.Navigation("Objave");

                    b.Navigation("OceneRcv");

                    b.Navigation("OceneSnd");

                    b.Navigation("PorukeRcv");

                    b.Navigation("PorukeSnd");

                    b.Navigation("Taskovi");

                    b.Navigation("TeamLeader");
                });

            modelBuilder.Entity("Models.Sprint", b =>
                {
                    b.Navigation("Taskovi");
                });

            modelBuilder.Entity("Models.Team", b =>
                {
                    b.Navigation("Invites");

                    b.Navigation("Objave");

                    b.Navigation("Sprints");

                    b.Navigation("Tags");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
